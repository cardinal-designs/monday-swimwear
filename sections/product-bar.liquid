{{ 'component-product-bar.css' | asset_url | stylesheet_tag }}

{% assign product_form_id = 'product-form-' | append: section.id %}

<div class="product-bar headroom">
  <div class="page-width">
    <div class="product-bar__container">
      <div class="product-bar__title hide-mobile">
        {% assign product_group = '' %}
        {% for tag in product.tags %}
          {% if tag contains 'group_' %}
            {% assign split_tag = tag | split: '_' %}
            {% assign product_group = split_tag[1] %}
          {% endif %}
        {% endfor %}
        <h2 class="sh1">
          {% if product_group %}
            {{ product_group }}
          {% else %}
            {{ product.title }}
          {% endif %}
        </h2>
      </div>
      <div class="product-bar__form">
        {% assign use_collection_for_swatches = false %}
        {% assign collection_for_swatches = '' %}
        {% for tag in product.tags %}
          {% if tag contains 'group_' %}
            {% assign use_collection_for_swatches = true %}

            {% assign split_tag = tag | split: '_' %}
            {% assign collection_handle = split_tag[1] | handleize %}
            {% assign collection_for_swatches = collections[collection_handle] %}
          {% endif %}
        {% endfor %}

        <variant-radios class="no-js-hidden hide-mobile" data-section="{{ section.id }}" data-url="{{ product.url }}">
          {%- for option in product.options_with_values -%}
            <fieldset class="js product-form__input"{% if use_collection_for_swatches and option.name == 'Color' %} style="display: none"{% endif %}>
              <div class="product-form__input-wrapper">
                <legend class="form__label detail-caps">{{ option.name }}</legend>
                <div class="product-form__input-buttons">
                  <button class="product-form__input-button">
                    <p class="product-form__input-active caption-neue">
                      {% if option.name == 'Size' %}
                        <span class="product-form__input-active-size-bubble">{{ option.selected_value }}</span>
                        {% render 'size-text' value: option.selected_value %}
                      {% else %}
                        {{ option.selected_value }}
                      {% endif %}
                    </p>
                    {% render 'icon-caret-down' %}
                  </button>
                  <div class="product-form__input-buttons-dropdown">
                    {%- for value in option.values -%}
                      <div class="product-form__input-button-wrapper">
                        <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          {% if option.name == 'Size' %}class="product-form__input-size is-product-bar"{% endif %}
                          name="{{ option.name }}"
                          value="{{ value | escape }}"
                          form="{{ product_form_id }}"
                          {% if option.selected_value == value %}checked{% endif %}
                        >
                        <label class="detail-caps" for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                          <span class="product-form__input-btn">
                            {{ value }}
                          </span>
                          <p class="caption-neue">
                            {% if option.name == 'Size' %}
                              {% render 'size-text' value: value %}
                            {% else %}
                              {{ option.selected_value }}
                            {% endif %}
                          </p>
                        </label>
                      </div>
                    {%- endfor -%}
                  </div>
                </div>
              </div>
            </fieldset>
          {%- endfor -%}
          <script type="application/json">
            {{ product.variants | json }}
          </script>
        </variant-radios>

        <product-form class="product-form">
          {% if use_collection_for_swatches %}
            <div class="product__collection-colors hide-mobile">
              <legend class="form__label detail-caps">Color</legend>
              <div class="product__swatches">
                <button class="product__swatches-button">
                  {% for option in product.options_with_values %}
                    {% if option.name == 'Color' %}
                      {% assign color = option.values[0] %}
                    {% endif %}
                  {% endfor %}
                  {% assign color_swatch_name = color | handleize | prepend: 'swatch_' | append: '.jpg' %}
                  {% assign color_swatch_image = images[color_swatch_name] %}
                  <div class="product__swatch-color" style="background-image: url('{{ color_swatch_image | img_url: '50x' }}')"></div>

                  <p class="product__active-color caption-neue">{{ product.metafields.nosto.color }}</p>
                  {% render 'icon-caret-down' %}
                </button>
                <div class="product__swatches-dropdown">
                  {% for current_product in collection_for_swatches.products %}
                    {% for option in current_product.options_with_values %}
                      {% if option.name == 'Color' %}
                        {% assign color = option.values[0] %}
                      {% endif %}
                    {% endfor %}
                    {% assign color_swatch_name = color | handleize | prepend: 'swatch_' | append: '.jpg' %}
                    {% assign color_swatch_image = images[color_swatch_name] %}

                    <a class="product__swatch{% if product.handle == current_product.handle %} active{% endif %}" href="{{ current_product.url }}">
                      <div class="product__swatch-color" style="background-image: url('{{ color_swatch_image | img_url: '50x' }}')"></div>
                      <span class="caption-neue">{{ color }}</span>
                    </a>
                  {% endfor %}
                </div>
              </div>

            </div>
          {% endif %}

          {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <input type="hidden" name="quantity" value="1">

            <button
              type="submit"
              name="add"
              class="product-form__submit button button--bone"
            {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
            >
                <span>
                  {%- if product.selected_or_first_available_variant.available -%}
                    {{ 'products.product.add_to_cart' | t }}
                  {%- else -%}
                    {{ 'products.product.sold_out' | t }}
                  {%- endif -%}
                </span>

                <div class="product-form__glow"></div>

                <span>{{ product.selected_or_first_available_variant.price | money_with_currency | remove: '.00' }}</span>

                <div class="loading-overlay__spinner hidden">
                  <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                    <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
            </button>
          {%- endform -%}
        </product-form>
      </div>
    </div>
  </div>
</div>

{% javascript %}
  // Handle opening / closing dropdowns
  const colorButton = document.querySelector('.product__swatches-button');
  colorButton.addEventListener('click', event => {
    colorButton.classList.toggle('active');
  });

  const dropdownButtons = document.querySelectorAll('.product-form__input-button');
  dropdownButtons.forEach(dropdownButton => {
    dropdownButton.addEventListener('click', event => {
      dropdownButton.classList.toggle('active');
    });
  });

  const variantButtons = document.querySelectorAll('.product-form__input input[type="radio"]');
  variantButtons.forEach(variantButton => {
    variantButton.addEventListener('click', event => {
      dropdownButtons.forEach(dropdownButton => {
        console.log(dropdownButtons)
        dropdownButton.classList.remove('active');
      });
    });
  });

  // Show bar after scroll
  const headroom = new Headroom(document.querySelector('.product-bar'), { offset: 350 });
  headroom.init();

{% endjavascript %}

{% schema %}
  {
    "name": "Product Bar",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Title"
      }
    ],
    "blocks": [
      {
        "type": "block",
        "name": "Block",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Product Bar"
      }
    ],
    "templates": ["product"]
  }
{% endschema %}